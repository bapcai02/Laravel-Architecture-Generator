<?php

namespace {{namespace}};

use {{model_namespace}}\{{model_name}};
use {{interface_namespace}}\{{interface_name}};
use Illuminate\Database\Eloquent\Collection;

class {{class_name}} implements {{interface_name}}
{
    /**
     * Find a model by its primary key.
     */
    public function find(int $id): ?{{model_name}}
    {
        return {{model_name}}::find($id);
    }

    /**
     * Find a model by its primary key or throw an exception.
     */
    public function findOrFail(int $id): {{model_name}}
    {
        return {{model_name}}::findOrFail($id);
    }

    /**
     * Get all models.
     */
    public function all(): Collection
    {
        return {{model_name}}::all();
    }

    /**
     * Create a new model.
     */
    public function create(array $data): {{model_name}}
    {
        return {{model_name}}::create($data);
    }

    /**
     * Update a model.
     */
    public function update({{model_name}} $model, array $data): bool
    {
        return $model->update($data);
    }

    /**
     * Delete a model.
     */
    public function delete({{model_name}} $model): bool
    {
        return $model->delete();
    }

    /**
     * Get models by criteria.
     */
    public function findBy(array $criteria): Collection
    {
        $query = {{model_name}}::query();
        
        foreach ($criteria as $field => $value) {
            $query->where($field, $value);
        }
        
        return $query->get();
    }

    /**
     * Get a single model by criteria.
     */
    public function findOneBy(array $criteria): ?{{model_name}}
    {
        $query = {{model_name}}::query();
        
        foreach ($criteria as $field => $value) {
            $query->where($field, $value);
        }
        
        return $query->first();
    }
} 